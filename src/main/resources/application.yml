spring:
  application:
    name: analytics-service

  # Configuration will be loaded from Config Server
  # Local configuration for development/testing only
  config:
    import: "optional:configserver:${CONFIG_SERVER_URI:http://localhost:8888}"

  cloud:
    config:
      enabled: ${SPRING_CLOUD_CONFIG_ENABLED:true}
      fail-fast: false  # Changed to false so it can start without config server

  datasource:
    url: ${DB_URL:jdbc:postgresql://localhost:5432/yushan_analytics}
    username: ${DB_USERNAME:yushan_analytics}
    password: ${DB_PASSWORD:ahanj123}
    driver-class-name: org.postgresql.Driver
    hikari:
      maximum-pool-size: 10
      minimum-idle: 5
      connection-timeout: 20000

  # JPA/Hibernate Configuration - Disabled (using MyBatis only)
  jpa:
    hibernate:
      ddl-auto: none
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: false

  # Flyway Configuration
  flyway:
    enabled: ${FLYWAY_ENABLED:true}
    locations: classpath:db/migration
    baseline-on-migrate: true
    validate-on-migrate: true

  # MyBatis Configuration
  mybatis:
    mapper-locations: classpath:/mapper/**Mapper.xml
    type-aliases-package: com.yushan.analytics_service.entity
    config-location: classpath:config/mybatis-config.xml

  # Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST:localhost}
      port: ${REDIS_PORT:6379}
      password: ${REDIS_PASSWORD:}

  # Kafka Configuration (if used)
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
    enabled: ${SPRING_KAFKA_ENABLED:false}

# Server Configuration
server:
  port: ${SERVER_PORT:8083}
  servlet:
    context-path: /
  compression:
    enabled: true

# Eureka Client Configuration
eureka:
  client:
    enabled: ${EUREKA_CLIENT_ENABLED:true}
    serviceUrl:
      defaultZone: ${EUREKA_CLIENT_SERVICEURL_DEFAULTZONE:http://localhost:8761/eureka/}
    fetch-registry: true
    register-with-eureka: true

  instance:
    prefer-ip-address: true
    instance-id: ${spring.application.name}:${server.port}
    lease-renewal-interval-in-seconds: 30
    lease-expiration-duration-in-seconds: 90
    metadata-map:
      version: 1.0.0
      description: Analytics and ranking service

# JWT Configuration - ADD THIS SECTION
jwt:
  secret: ${JWT_SECRET:your-secret-key-for-jwt-token-generation-and-validation-minimum-256-bits}
  issuer: ${JWT_ISSUER:yushan-micro-service}
  algorithm: ${JWT_ALGORITHM:HS256}
  expiration: ${JWT_EXPIRATION:86400000}

# Service URLs for Feign Clients - ADD THIS SECTION
services:
  user:
    name: ${USER_SERVICE_NAME:user-service}
    url: ${USER_SERVICE_URL:http://localhost:8081}
  content:
    name: ${CONTENT_SERVICE_NAME:content-service}
    url: ${CONTENT_SERVICE_URL:http://localhost:8082}
  engagement:
    name: ${ENGAGEMENT_SERVICE_NAME:engagement-service}
    url: ${ENGAGEMENT_SERVICE_URL:http://localhost:8084}
  gamification:
    name: ${GAMIFICATION_SERVICE_NAME:gamification-service}
    url: ${GAMIFICATION_SERVICE_URL:http://localhost:8085}

# Analytics Configuration - ADD THIS SECTION
analytics:
  aggregation:
    batch-size: ${ANALYTICS_BATCH_SIZE:1000}
    interval: ${ANALYTICS_AGGREGATION_INTERVAL:300}
  retention:
    raw-data-days: ${ANALYTICS_RETENTION_DAYS:90}
    aggregated-data-days: ${ANALYTICS_AGGREGATED_DATA_DAYS:365}
  cache:
    ttl: ${ANALYTICS_CACHE_TTL:600}
  reports:
    max-page-size: ${ANALYTICS_MAX_PAGE_SIZE:1000}

# Actuator Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: ${spring.application.name}

# Logging Configuration
logging:
  level:
    com.yushan.analytics: DEBUG
    org.springframework.cloud: INFO
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} - %msg%n"
    file: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"